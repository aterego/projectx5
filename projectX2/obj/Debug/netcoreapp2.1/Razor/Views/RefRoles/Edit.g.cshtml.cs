#pragma checksum "f:\projects\projectX5_git\projectx5\projectX2\Views\RefRoles\Edit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "46e665dc535a354bc97a5cb436a93b754789b967"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_RefRoles_Edit), @"mvc.1.0.view", @"/Views/RefRoles/Edit.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/RefRoles/Edit.cshtml", typeof(AspNetCore.Views_RefRoles_Edit))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"46e665dc535a354bc97a5cb436a93b754789b967", @"/Views/RefRoles/Edit.cshtml")]
    public class Views_RefRoles_Edit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DAL.Models.RefRoles>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "f:\projects\projectX5_git\projectx5\projectX2\Views\RefRoles\Edit.cshtml"
  
    ViewData["Title"] = "Edit Role & Permissions";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(134, 91, true);
            WriteLiteral("<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <h1>\r\n        ");
            EndContext();
            BeginContext(226, 17, false);
#line 9 "f:\projects\projectX5_git\projectx5\projectX2\Views\RefRoles\Edit.cshtml"
   Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(243, 805, true);
            WriteLiteral(@"
    </h1>
</section>
<!-- Main content -->
<section class=""content container-fluid"">
    <div class=""row"">
        <!-- left column -->
        <div class=""col-md-12"">
            <!-- general form elements -->
            <div class=""box box-primary"">
                <div class=""box-header with-border"">
                    <h3 class=""box-title"">Edit Admin Info</h3>
                </div>
                <!-- /.box-header -->
                <!-- form start -->
                <form method=""post"" asp-action=""/Roles/Edit"">
                    <div class=""box-body"">
                        <div class=""form-group"">
                            <label for=""exampleInputEmail1"">Title</label>
                            <input type=""text"" class=""form-control"" id=""Title"" name=""Title""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 1048, "\"", 1068, 1);
#line 28 "f:\projects\projectX5_git\projectx5\projectX2\Views\RefRoles\Edit.cshtml"
WriteAttributeValue("", 1056, Model.Title, 1056, 12, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1069, 298, true);
            WriteLiteral(@" placeholder=""Enter Title"">
                        </div>
                        <div class=""form-group"">
                            <label for=""exampleInputPassword1"">Description</label>
                            <input type=""text"" class=""form-control"" id=""Description"" name=""Description""");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 1367, "\"", 1393, 1);
#line 32 "f:\projects\projectX5_git\projectx5\projectX2\Views\RefRoles\Edit.cshtml"
WriteAttributeValue("", 1375, Model.Description, 1375, 18, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1394, 1153, true);
            WriteLiteral(@" placeholder=""Enter Description"">
                        </div>
                    </div>
                    <!-- /.box-body -->
                    <div class=""box-footer"">
                        <button type=""submit"" class=""btn btn-primary"">Submit</button>
                    </div>
                </form>
            </div>
            <!-- /.box -->
        </div>
    </div>
    <div class=""row"">
        <div class=""col-sm-12"">
            <div class=""white-box"">
                <h3 class=""box-title m-b-30"">Assign Roles</h3>
                <div class=""row"">
                    <div class=""col-lg-12 col-sm-12"">
                        <div style=""margin-left:28px; margin-top:20px;"">
                            <button type=""button"" class=""btn"">Collapsed</button>
                            <button type=""button"" class=""btn"">Expanded</button>
                            <button type=""button"" class=""btn"">Check All</button>
                            <button type=""button"" class=""btn");
            WriteLiteral("\">Uncheck All</button>\r\n                        </div>\r\n                        <ul class=\"mytree\">\r\n                            ");
            EndContext();
            BeginContext(2548, 22, false);
#line 57 "f:\projects\projectX5_git\projectx5\projectX2\Views\RefRoles\Edit.cshtml"
                       Write(Html.Raw(ViewBag.menu));

#line default
#line hidden
            EndContext();
            BeginContext(2570, 1789, true);
            WriteLiteral(@"
                        </ul>
                        <div style=""margin-left:28px"">
                            <button onclick=""Done()"" class=""btn btn-primary"">Update</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>

    $(document).on('click', '.mytree label', function (e) {
        $(this).next('ul').fadeToggle();
        e.stopPropagation();
    });

    $(document).on('change', '.mytree input[type=checkbox]', function (e) {
        $(this).siblings('ul').find(""input[type='checkbox']"").prop('checked', this.checked);
        //$(this).parentsUntil('.mytree').children(""input[type='checkbox']"").prop('checked', this.checked);
        e.stopPropagation();
    });

    $(document).on('click', 'button', function (e) {
        switch ($(this).text()) {
            case 'Collapsed':
                $('.mytree ul').fadeOut();
                break;
            case 'Expanded':
  ");
            WriteLiteral(@"              $('.mytree ul').fadeIn();
                break;
            case 'Check All':
                $("".mytree input[type='checkbox']"").prop('checked', true);
                break;
            case 'Uncheck All':
                $("".mytree input[type='checkbox']"").prop('checked', false);
                break;
            default:
        }
    });


    function Done() {

        var checkedValues = $('input:checkbox:checked').map(function () {
            return this.id;
        }).get();

        $body = $(""body"");
        $(document).on({
            ajaxStart: function () { $body.addClass(""loading""); },
            ajaxStop: function () { }
        });

        $.ajax({
            type: ""POST"",
            url: '");
            EndContext();
            BeginContext(4360, 32, false);
#line 114 "f:\projects\projectX5_git\projectx5\projectX2\Views\RefRoles\Edit.cshtml"
             Write(Url.Action("Update", "RefRoles"));

#line default
#line hidden
            EndContext();
            BeginContext(4392, 45, true);
            WriteLiteral("\',\r\n            data: {\r\n                id: ");
            EndContext();
            BeginContext(4438, 8, false);
#line 116 "f:\projects\projectX5_git\projectx5\projectX2\Views\RefRoles\Edit.cshtml"
               Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(4446, 599, true);
            WriteLiteral(@",
                roles: checkedValues
            },
            error: function (result) {
                alert(""error"");
            },
            success: function (result) {
                $body.removeClass(""loading"");
                if (result.status == true) {

                    alert(""Successfully Updated Role!"")
                    var baseUrl = ""/RefRoles"";
                    window.location.href = baseUrl;
                }
                else {
                    alert(""Failed:""+result);
                }
            }
        });
    }

</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DAL.Models.RefRoles> Html { get; private set; }
    }
}
#pragma warning restore 1591
